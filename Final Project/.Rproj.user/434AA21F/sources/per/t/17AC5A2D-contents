---
title: "Mini-Porject2 Final"
author: "Prashanth"
date: "3/22/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(dplyr)
library(tidyverse)
library(lattice)
library(forecast)
library(ggplot2)
library(readr)
DFP <- read_csv("DFP_WTHH_release.csv")
cols = c('presvote16post','house3','weight_DFP', 'M4A', 'GREENJOB', 'WEALTH','MARLEG','ICE','GUNS','POP_1','POP_2','POP_3')
DFP_NEW <- DFP[,cols]
```


```{r}
DFP_NEW$Loyal_Democrats <- ifelse(DFP_NEW$presvote16post == 1 & DFP_NEW$house3 == 1, 1, 0)
DFP_NEW$Loyal_Republicans <- ifelse(DFP_NEW$presvote16post == 2 & DFP_NEW$house3 == 2, 1, 0)
DFP_NEW$Swing_Voters <- ifelse(DFP_NEW$Loyal_Democrats == 0 & DFP_NEW$Loyal_Republicans == 0, 1, 0)
DFP_NEW$SwitchtoD <- ifelse(DFP_NEW$presvote16post != 1 & DFP_NEW$house3 == 1 & DFP_NEW$Swing_Voters==1, 1, 0)
DFP_NEW$SwitchtoR <- ifelse(DFP_NEW$presvote16post != 2 & DFP_NEW$house3 == 2 & DFP_NEW$Swing_Voters==1, 1, 0)
```


#Q1. How do Switch to D and Switch to R voters differ on the issue variables? 

```{r}
swing_D = subset(DFP_NEW, presvote16post!=1 & house3 ==1)
swing_R = subset(DFP_NEW, presvote16post!=2 & house3 ==2)
```


```{r}
cb_palette = c("#0099ff","#ff5050")
DFP_Switch_D <- DFP_NEW %>% filter(SwitchtoD == 1)
DFP_Switch_D_gathered <- DFP_Switch_D %>% gather(key = "Issue_Var_Type",value = "value",M4A, GREENJOB, WEALTH,MARLEG,ICE,GUNS)
DFP_Switch_R <- DFP_NEW %>% filter(SwitchtoR == 1) 
DFP_Switch_R_gathered <- DFP_Switch_R %>% gather(key = "Issue_Var_Type",value = "value",M4A, GREENJOB, WEALTH,MARLEG,ICE,GUNS)

DFP_Switches <- DFP_Switch_D_gathered %>%  mutate(Type = 'SwitchtoD') %>%
       bind_rows(DFP_Switch_R_gathered %>%
           mutate(Type = 'SwitchtoR'))

DFP_Switches1 = DFP_Switches %>% group_by(Type,Issue_Var_Type,value) %>% summarise(Sum = sum(weight_DFP))

DFP_Switches2 = DFP_Switches %>% group_by(Type,Issue_Var_Type,value) %>% summarise(Mean = mean(weight_DFP))

#ggplot(DFP_Switches1,aes(x=value,y = Sum , color = factor(Type))) + geom_line() + ggtitle("Variables Distribution for Swing to D and Swing to R") + labs(x="Issue values",y="Number of people") + facet_wrap(~Issue_Var_Type,ncol=3) 

#geom_bar(stat = "identity", position = 'dodge') +

DFP_Switches3 = DFP_Switches1[DFP_Switches1$value!=6,]
DFP_Switches3 = DFP_Switches3[!is.na(DFP_Switches3$value),]

ggplot(DFP_Switches2,aes(x=value,y = Mean , fill = factor(Type))) + geom_bar(stat = "identity", position = 'dodge') +  ggtitle("Variables Distribution for Switch to D and Switch to R") + labs(x="Issue values",y="Weighted Average") + facet_wrap(~Issue_Var_Type,ncol=3) + scale_fill_discrete(name = "Swing Groups") + scale_fill_manual(values=cb_palette,name = "Swing Groups") +  scale_x_discrete(limits=c(1,2,3,4,5,6))


ggplot(DFP_Switches3,aes(x=value,y = Sum , color = factor(Type))) + geom_line() +  ggtitle("Variables Distribution for Switch to D and Switch to R") + labs(x="Issue values",y="Weighted Average") + facet_wrap(~Issue_Var_Type,ncol=3) + scale_fill_discrete(name = "Swing Groups") + scale_fill_manual(values=cb_palette,name = "Swing Groups") +  scale_x_discrete(limits=c(1,2,3,4,5))

DFP_Switches3$sum_sd = (DFP_Switches3$Sum-min(DFP_Switches3$Sum))/(max(DFP_Switches3$Sum) - min(DFP_Switches3$Sum))

ggplot(DFP_Switches3,aes(x=value,y = sum_sd , color = factor(Type))) + geom_line() +  ggtitle("Variables Distribution for Switch to D and Switch to R") + labs(x="Issue values",y="Weighted Average") + facet_wrap(~Issue_Var_Type,ncol=3) + scale_fill_discrete(name = "Swing Groups") + scale_fill_manual(values=cb_palette,name = "Swing Groups") +  scale_x_discrete(limits=c(1,2,3,4,5))



tt = DFP_Switches3 %>% group_by(Issue_Var_Type,Type) %>% summarise(Total = sum(Sum))
DFP_Switches4 = inner_join(DFP_Switches3,tt,on=c("Issue_Var_Type","Type"))
DFP_Switches4$perc = DFP_Switches4$Sum/DFP_Switches4$Total

ggplot(DFP_Switches4,aes(x=value,y = perc , color = factor(Type))) + geom_line() +  ggtitle("Variables Distribution for Switch to D and Switch to R") + labs(x="Issue values",y="Weighted Average") + facet_wrap(~Issue_Var_Type,ncol=3) + scale_fill_discrete(name = "Swing Groups") + scale_fill_manual(values=cb_palette,name = "Swing Groups") +  scale_x_discrete(limits=c(1,2,3,4,5))

ggplot(DFP_Switches4,aes(x=value,y = perc , fill = factor(Type))) + geom_bar(stat = "identity", position = 'dodge')  +  ggtitle("Percentage of Voters vs Survey scores for Issues") + labs(x="Survey Scores",y="Percentage of Voters") + facet_wrap(~Issue_Var_Type,ncol=3) + scale_fill_discrete(name = "Swing Groups") + scale_fill_manual(values=cb_palette,name = "Swing Groups") +  scale_x_discrete(limits=c(1,2,3,4,5))



#ggplot(DFP_Switches,aes(x = value, fill = as.factor(Type))) + geom_density(alpha = 0.3) + facet_wrap(~Issue_Var_Type) + ggtitle("Variables Distribution for Swing to D and Swing to R")+ scale_fill_manual(values = cb_palette)+ ylab("Density")+ xlab("Value of Issue Variables")


```



######## Question 2 ####################
```{r warning=FALSE,message=FALSE}
library(tidyverse)
library(broom)
library(lattice)
library(viridis)
library(MASS)
library(NHANES)
library(arm)
library(grid)
library(gridExtra)
library(dplyr)
library(reshape)

cb_palette = c("#0000FF", "#FF0000", "#FFA500")
```

```{r}
DFP_WTHH_release <- read_csv("DFP_WTHH_release.csv")

df1 = dplyr::select(DFP_WTHH_release,rowid,presvote16post,house3,weight_DFP,M4A,GREENJOB,WEALTH,MARLEG,ICE,GUNS,POP_1,POP_2,POP_3)


df3 =  df1 %>% mutate(Voter_Group = case_when(presvote16post == 1 & house3 ==1 ~"Loyal Democrats",
                                              presvote16post == 2 & house3 ==2 ~"Loyal Republicans",
                                              TRUE ~ "Swing Voters"))
  
  
#df1$Voter_Group = ifelse(is.na(df1$Voter_Group),"Did not vote",df1$Voter_Group)

df3$Swing_groups = ifelse(df3$Voter_Group=="Swing Voters" & df3$presvote16post!=1 & df3$house3 ==1,"Switch to D",ifelse(df3$Voter_Group=="Swing Voters" & df3$presvote16post!=2 & df3$house3 ==2,"Switch to R","Not a Swing Voter"))

df3$Swing_flag = ifelse(df3$Voter_Group=="Swing Voters",1,0)

#df2 <- df1 %>% mutate(Category = case_when(presvote16post == 1 & house3 == 1 ~ 0,presvote16post == 2 & house3 == 2 ~ 0, TRUE ~ 1))
#df2=df1[complete.cases(df1), ]

df2=df3[,c(1,4:10,14)]


data_plot_1 <- gather(df2, key, value, -rowid,-weight_DFP,-Voter_Group)

data_plot_1$value2=data_plot_1$value*data_plot_1$weight_DFP


data_plot_2 = data_plot_1 %>% group_by(Voter_Group,key,value) %>% summarise(Sum = sum(weight_DFP))

data_plot_2$sum_sd = (data_plot_2$Sum-min(data_plot_2$Sum))/(max(data_plot_2$Sum) - min(data_plot_2$Sum))
data_plot_3 = data_plot_1 %>% group_by(Voter_Group,key,value) %>% summarise(Mean = mean(weight_DFP))


```

```{r}
data_plot_2 = data_plot_2[data_plot_2$value!=6,]
data_plot_2 = data_plot_2[!is.na(data_plot_2$value),]

tt = data_plot_2 %>% group_by(key,Voter_Group) %>% summarise(Total = sum(Sum))
data_plot_4 = inner_join(data_plot_2,tt,on=c("key","Voter_Group"))
data_plot_4$perc = data_plot_4$Sum/data_plot_4$Total


ggplot(data_plot_2,aes(x=value,y = sum_sd , color = factor(Voter_Group))) + geom_line(size=1.00) + ggtitle("Number of people (Based on Weights) vs Survey scores for Issues") + labs(x="Survey Scores for Issues",y="Number of people (Based on Weights)") + facet_wrap(~key,ncol=6)  + scale_color_manual(name="Voter Group",values=cb_palette)  +  scale_x_discrete(limits=c(1,2,3,4,5))

ggplot(data_plot_4,aes(x=value,y = perc , color = factor(Voter_Group))) + geom_line(size=1.00) + ggtitle("Percentage of Voters vs Survey scores for Issues") + labs(x="Survey Scores",y="Percentage of Voters") + facet_wrap(~key,ncol=3)  + scale_color_manual(name="Voter Group",values=cb_palette)  +  scale_x_discrete(limits=c(1,2,3,4,5))



```


```{r}
ggplot(data_plot_3,aes(x=value,y = Mean , color = factor(Voter_Group))) + geom_point() + ggtitle("Number of people vs Survey scores for Issues") + labs(x="Survey Issue scores",y="Average Number of people based on weights") + facet_wrap(~key,ncol=6) + scale_color_manual(name="Voter Group",values=cb_palette)

```


####### Question 3 #####################
```{r warning=F,message=F}
library(tidyverse)
library(ggplot2)
library(dplyr)
cb_palette = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```


```{r warning=F,message=F}
DFP_WTHH_release <- read_csv("DFP_WTHH_release.csv")

cols = c('presvote16post','house3','weight_DFP', 'M4A', 'GREENJOB', 'WEALTH','MARLEG','ICE','GUNS','POP_1','POP_2','POP_3')

df1 = DFP_WTHH_release[,cols]

#df1 = df1[complete.cases(df1),]

df1$Voter_Group = ifelse(df1$presvote16post==1 & df1$house3 ==1,"Loyal Democrats",
                                       ifelse(df1$presvote16post==2 & df1$house3 ==2,"Loyal Republicans",ifelse(is.na(df1$presvote16post),"Did not vote","Swing Voters")))

df1$Voter_Group = ifelse(is.na(df1$Voter_Group),"Did not vote",df1$Voter_Group)

df1$Swing_groups = ifelse(df1$Voter_Group=="Swing Voters" & df1$presvote16post!=1 & df1$house3 ==1,"Switch to D",ifelse(df1$Voter_Group=="Swing Voters" & df1$presvote16post!=2 & df1$house3 ==2,"Switch to R","Not a Swing Voter"))

#df1$Swing_flag = ifelse(df1$Voter_Group=="Swing Voters",1,0)
df1 <- df1 %>% mutate(Swing_flag = case_when(presvote16post == 1 & house3 == 1 ~ 0,presvote16post == 2 & house3 == 2 ~ 0, TRUE ~ 1))
```


```{r}
#df1_v1 = df1[!(df1$M4A<6 & df1$GREENJOB<6 & df1$WEALTH<6 & df1$MARLEG<6 & df1$ICE<6 & df1$GUNS<6),]
#df1 = df1_v1
df1_v1 = df1
df1_v1$M4A = ifelse(df1_v1$M4A==6,3,df1_v1$M4A)
df1_v1$GREENJOB = ifelse(df1_v1$GREENJOB==6,3,df1_v1$GREENJOB)
df1_v1$WEALTH = ifelse(df1_v1$WEALTH==6,3,df1_v1$WEALTH)
df1_v1$MARLEG = ifelse(df1_v1$MARLEG==6,3,df1_v1$MARLEG)
df1_v1$ICE = ifelse(df1_v1$ICE==6,3,df1_v1$ICE)
df1_v1$GUNS = ifelse(df1_v1$GUNS==6,3,df1_v1$GUNS)

df1 = df1_v1
vars <- c("M4A", "GREENJOB", "WEALTH", "MARLEG","ICE","GUNS")
req_cols = c("Swing_flag","M4A", "GREENJOB", "WEALTH", "MARLEG","ICE","GUNS","weight_DFP")
res <- data.frame(matrix(nrow=21,ncol = 3, byrow = TRUE))
k=1
df2 = df1[,req_cols]
df2 = df2[complete.cases(df2),]
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ ",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.25,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 1
  k=k+1
}


vars <- c("GREENJOB", "WEALTH", "MARLEG","ICE","GUNS")
#res <- data.frame(matrix(nrow=100,ncol = 2, byrow = TRUE))
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ M4A +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 2
  k = k+1
}


vars <- c("WEALTH", "MARLEG","ICE","GUNS")
#res <- data.frame(matrix(nrow=100,ncol = 2, byrow = TRUE))
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ GREENJOB + M4A + ",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 3
  k = k+1
}


vars <- c("ICE", "MARLEG","GUNS")
#res <- data.frame(matrix(nrow=100,ncol = 2, byrow = TRUE))
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ M4A + WEALTH + GREENJOB +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 4
  k = k+1
}

vars <- c("GUNS","MARLEG")
#res <- data.frame(matrix(nrow=100,ncol = 2, byrow = TRUE))
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ M4A + WEALTH + ICE + GREENJOB +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 5
  k = k+1
}

vars <- c("GUNS")
#res <- data.frame(matrix(nrow=100,ncol = 2, byrow = TRUE))
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ M4A + WEALTH + ICE + GREENJOB + MARLEG +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),4)
  res$X1[k] = substr(f[3],1,nchar(f[3]))
  res$X2[k] = error
  res$X3[k] = 6
  k = k+1
}

```

```{r}
#### Plotting for error
names(res) = c("Variable.Names","Error","Variable")
library(sqldf)
ss = sqldf("select Variable,min(Error) as Error from res group by Variable")
ggplot(ss,aes(x=Variable,y = Error )) + geom_line() +
  ggtitle("Performance of Model with number of variables") + labs(x="Number of Issue variables considered",y="Classification Error")+
  scale_x_discrete(limits=c(1,2,3,4,5,6))

```

```{r}

prob_table = data.frame()
rows = c(1,7,12,16,20,21)

for(i in 1:length(rows))
{
fit = glm(paste("Swing_flag ~",res$Variable.Names[rows[i]],collapse = ""),weights = weight_DFP,data=df2)
print(paste("Swing_flag ~",res$Variable.Names[rows[i]],collapse = ""))
pred_prob = predict(fit)
tt = data.frame(matrix(nrow=3132,ncol = 2, byrow = TRUE))
tt$X1 = pred_prob
tt$X2 = i
prob_table = rbind(prob_table,tt)
}

```


```{r}
names(prob_table) = c("Probabilities","Variable")

cb_palette = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
               "#D55E00", "#CC79A7")

## \n (1:M4A, 2:M4A+GREENJOB, 3:M4A+GREENJOB+WEALTH,\n 4:M4A+GREENJOB+WEALTH+ICE, 5:M4A+GREENJOB+WEALTH+ICE+GUNS,\n 6:M4A+GREENJOB+WEALTH+ICE+GUNS+MARLEG
ggplot(prob_table,aes(x = Probabilities)) + geom_density(alpha = 0.3,fill="#0072B2") +
  facet_wrap(~Variable) + ggtitle("Distribution of Predicted Probabilities",
  subtitle = "Facetted by number of issue variables")+ 
  scale_fill_manual(values = cb_palette)+
  ylab("Density")+ xlab("Predicted Probabilites")

```

```{r}
vars <- c("POP_1","POP_2","POP_3")
req_cols = c("Swing_flag","POP_1","POP_2","POP_3","weight_DFP")
res1 <- data.frame(matrix(nrow=6,ncol = 3, byrow = TRUE))
k=1
df2 = df1[,req_cols]
df2 = df2[complete.cases(df2),]

df2$POP_1 = ifelse(df2$POP_1==6,3,df2$POP_1)
df2$POP_2 = ifelse(df2$POP_2==6,3,df2$POP_2)
df2$POP_3 = ifelse(df2$POP_3==6,3,df2$POP_3)

for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ ",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>=0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),8)
  res1$X1[k] = substr(f[3],1,nchar(f[3]))
  res1$X2[k] = error
  res1$X3[k] = 1
  k=k+1
}

vars <- c("POP_3","POP_2")
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ POP_1 +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>=0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),8)
  res1$X1[k] = substr(f[3],1,nchar(f[3]))
  res1$X2[k] = error
  res1$X3[k] = 2
  k=k+1
}

vars <- c("POP_2")
for (i in 1:length(vars))
{
  f <- formula(paste("Swing_flag ~ POP_3 + POP_1 +",# MARLEG + ICE + GUNS +", 
                     paste(vars[[i]], collapse = "")))
  
  fit <- glm(f, data = df2,weights = weight_DFP,family = "binomial")
  #print(summary(fit))
  pred = predict(fit,type='response')
  pred  = ifelse(pred>=0.45,1,0)
  df2$pred = pred
  ones = nrow(df2[df2$Swing_flag==1 & df2$pred==1,])
  #print(ones)
  zeros= nrow(df2[df2$Swing_flag==0 & df2$pred==0,])
  acc = ones + zeros
  error = round(1 - (acc/nrow(df2)),8)
  res1$X1[k] = substr(f[3],1,nchar(f[3]))
  res1$X2[k] = error
  res1$X3[k] = 3
  k=k+1
}

```

```{r}

names(res1) = c("Variable.Names","Error","Variable")
library(sqldf)
ss1 = sqldf("select Variable,min(Error) as Error from res1 group by Variable")
ggplot(ss1,aes(x=Variable,y = Error )) + geom_line() +
  ggtitle("Performance of Model with number of variables") + labs(x="Number of Populism variables considered",y="Classification Error")+
  scale_x_discrete(limits=c(1,2,3))

```

```{r}
prob_table1 = data.frame()
rows = c(1,4,6)

for(i in 1:length(rows))
{
  fit = glm(paste("Swing_flag ~",res1$Variable.Names[rows[i]],collapse = ""),weights = weight_DFP,data=df2)
  print(paste("Swing_flag ~",res1$Variable.Names[rows[i]],collapse = ""))
  pred_prob = predict(fit)
  tt = data.frame(matrix(nrow=3174,ncol = 2, byrow = TRUE))
  tt$X1 = pred_prob
  tt$X2 = i
  prob_table1 = rbind(prob_table1,tt)
}

```

```{r}
names(prob_table1) = c("Probabilities","Variable")

cb_palette = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
               "#D55E00", "#CC79A7")
ggplot(prob_table1,aes(x = Probabilities)) + geom_density(alpha = 0.3,fill="#0072B2") +
  facet_wrap(~Variable) + ggtitle("Distribution of Predicted Probabilities",
                                  subtitle = "Facetted by number of populism variables \n(1:POP_1, 2:POP_1 + POP_3 , 3:POP_1 + POP_3 + POP_2)")+ 
  scale_fill_manual(values = cb_palette)+
  ylab("Density")+ xlab("Predicted Probabilites")

```

## Interaction for Populism variables

```{r}
swing.logit = glm(Swing_flag ~ POP_1+POP_2+POP_3+POP_1:POP_2+POP_2:POP_3+POP_3:POP_1,weights = weight_DFP,family = "binomial", data = df2)
summary(swing.logit)
```

```{r}
pred_full = predict(swing.logit,type='response')
pred_full  = ifelse(pred_full>=0.45,1,0)
df2$pred_full = pred_full
ones = nrow(df2[df2$Swing_flag==1 & df2$pred_full==1,])
#print(ones)
zeros= nrow(df2[df2$Swing_flag==0 & df2$pred_full==0,])
acc = ones + zeros
error = round(1 - (acc/nrow(df2)),8)
```